<?php 

function cz_custom_init() {
  global $user; 
}

/**
 * Implements hook_theme()
 * Define the various theme templates to be applied to the cards
 */
function cz_custom_theme(){
  return array(
    'card_default' => array(
      'variables' => array('data' => NULL),
      'template' => 'theme/card-default',
    ),
  );
}

function cz_custom_menu_alter(&$items) {
    // Change the title of user profile pages 
    $items['user']['title callback'] = 'cz_custom_user_page_title';
    $items['user/%user']['title callback'] = 'cz_custom_login_user_page_title';
} 

function cz_custom_login_user_page_title($account) { 
  if( is_numeric(arg(1)) && arg(2) == '' && $account->uid ) {
    return 'My account';  
  } else if( arg(2) == 'icontacts' ) {
    return 'My Contacts'; 
  } 

  return is_object($account) ? format_username($account) : '';
}

function cz_custom_user_page_title() {
  global $user; 
  
  if(arg(1)== '' && $user->uid ) {
    return 'My account';  
  } 
  
  if(arg(1)== 'register')
    return 'Register'; 
   
  if(arg(1)== 'login')
    return 'Sign in'; 
   
   return user_is_logged_in() ? t('My account') : t('User account'); 
}

 function cz_custom_menu() {
    $items['icontacts'] = array( 
      'title' => 'My Contacts',
      'page callback' => 'user_card_page',
      'access callback' => 'user_is_logged_in',
      'weight' => 6, 
      'menu_name' => 'user-menu', 
    ); 

    $items['user/%user/icontacts'] = array( 
      'title' => 'My Contacts',
      'page callback' => 'user_card_page',
      'page arguments' => array(1),
      'access callback' => 'user_view_access',
      'access arguments' => array(1),
      
      'type' => MENU_LOCAL_TASK, 
    ); 
    
    return $items;
}

// Callback for the user account page
function user_card_page($account = null) {
  global $user; 
  
  if($account == null) { 
    $account = $user; 
  } 
  
  return is_object($account) ? card_view($account) : MENU_NOT_FOUND;
}

/**
 * Main card display function
 */
function card_view($account, $card_theme = 'card_default') {
  // Make sure Drupal Ajax framework javascript is around for the widgets
  drupal_add_library('system', 'drupal.ajax');
  
  //@todo  cz_card  
  $query = db_select('cz_card', 'cz');
  $query->condition('cz.uid', $account->uid, '=');
  
  $header = array(
    'picture' => array('data' => t('')),
    'fullname' => array('data' => t('Name'), 'field' => 'cz.fullname'),
    'headline' => array('data' => t('Title'), 'field' => 'cz.headline'),
    'industry' => array('data' => t('Industry'), 'field' => 'cz.industry'),
    'profileurl' => array('data' => t('Location'), 'field' => 'cz.profileurl'), 
    'member_for' => array('data' => t('Added'), 'field' => 'cz.created', 'sort' => 'desc'),
    'widget_favorite' => array('data' => t('Favorite'), 'field' => 'cz.widget_favorite'),
    'operations' => array('data' => t('Operations')),
  ); 
  
  $count_query = clone $query;
  $count_query->addExpression('COUNT(cz.id)');
  
  $query = $query->extend('PagerDefault')->extend('TableSort');
  $query
    ->fields('cz', array('picture', 'headline', 'industry', 'organization', 'profileurl', 'id', 'fullname', 'address', 'created', 'widget_favorite'))
    ->limit(20)
    ->orderByHeader($header)
    ->setCountQuery($count_query);
  $result = $query->execute();
  $rows = array();

  return theme($card_theme, array('data' => $result)) . theme('pager'); 
}

/**
 * Implements hook_block_info().
 * Contact import block
 */
function cz_custom_block_info() { 
  $block['cz_import']['info'] = t('Import Contacts'); 
  
  return $block;
}

/**
 * Implements hook_block_view().
 */
function cz_custom_block_view($delta) {
  global $user;
  
  switch ($delta) {
    case 'cz_import':
      if ($user->uid) { 
        $importbtn = ''; 
        
        // find all providers ... 
        $result = db_query("SELECT p.name FROM {oauth_common_token} t left join {oauthconnector_provider} p on t.csid = p.csid WHERE t.uid = :uid AND t.type = :type ", array( ':uid' => $user->uid, ':type' => OAUTH_COMMON_TOKEN_TYPE_ACCESS )); 
          foreach ($result as $record) { 
            $importbtn .= l('Import from '.$record->name, 'oimport/'.$record->name)."<br/>"; 
          } 
          
          return array(
            'content' => $importbtn, 
          );

      } 

      break;
  }
}